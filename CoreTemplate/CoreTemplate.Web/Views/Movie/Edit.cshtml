@model CoreTemplate.ViewModels.Movie.MovieViewModel

@{
    ViewBag.Title = Model.Id > 0 ? string.Format("Edit {0}", Model.Name) : "New Movie";
}

<h1>@ViewBag.Title</h1>
<br /><br />

@using (Html.BeginForm("Edit", "Movie", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.Id)

    <div class="container">
        <div class="row mb-4">
            <div class="col">
                @Html.LabelFor(x => x.Name, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(x => x.ReleaseDate, new { @class = "control-label" })
                <div class="input-group date" id="datetimepicker" data-target-input="nearest">
                    @Html.TextBoxFor(x => x.ReleaseDate, new { @class = "form-control datetimepicker-input", @data_target = "#datetimepicker" })
                    <div class="input-group-append" data-target="#datetimepicker" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
                @Html.ValidationMessageFor(x => x.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-4">
            <div class="col">
                @Html.LabelFor(x => x.Runtime, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(x => x.Runtime, new { @class = "form-control" })
                    <div class="input-group-append">
                        <div class="input-group-text">minutes</div>
                    </div>
                </div>
                @Html.ValidationMessageFor(x => x.Runtime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-4">
            <div class="col">
                @Html.LabelFor(x => x.PurchaseCost, new { @class = "control-label" })
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">$</div>
                    </div>
                    @Html.TextBoxFor(x => x.PurchaseCost, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(x => x.PurchaseCost, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(x => x.RentCost, new { @class = "control-label" })
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">$</div>
                    </div>
                    @Html.TextBoxFor(x => x.RentCost, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(x => x.RentCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-4">
            <div class="col">
                @Html.LabelFor(x => x.ImageUrl, new { @class = "control-label" })
                @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ImageUrl, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(x => x.GenresSelectList, new { @class = "control-label" })
                @Html.ListBoxFor(x => x.GenreIds, Model.GenresSelectList, new { @class = "form-control" })
            </div>
        </div>

        <br />

        <div class="form-group">
            <button class="btn btn-primary" type="submit">Save</button>
            <br /><br />
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}
